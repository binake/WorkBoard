{"version":3,"file":"main.js","sources":["../electron/main.ts"],"sourcesContent":["import { app, BrowserWindow, ipcMain, dialog, Menu } from 'electron';\nimport { join } from 'path';\nimport { fileURLToPath } from 'url';\n\nconst __dirname = fileURLToPath(new URL('.', import.meta.url));\n\n// 在主进程中导入数据库服务\nlet taskDb: any;\n\nasync function initDatabase() {\n  try {\n    const { taskDb: db } = await import('../src/services/database');\n    taskDb = db;\n    console.log('Database initialized successfully in main process');\n  } catch (err) {\n    console.error('Failed to initialize database:', err);\n    dialog.showErrorBox('数据库初始化失败', err.message);\n  }\n}\n\n// IPC 处理器\nipcMain.handle('get-all-tasks', async () => {\n  try {\n    if (!taskDb) {\n      throw new Error('Database not initialized');\n    }\n    console.log('Getting all tasks');\n    const tasks = await taskDb.getAllTasks();\n    console.log('Tasks retrieved:', tasks);\n    return tasks;\n  } catch (err) {\n    console.error('Error in get-all-tasks:', err);\n    dialog.showErrorBox('获取任务失败', err.message);\n    return [];\n  }\n});\n\nipcMain.handle('add-task', async (event, task) => {\n  try {\n    if (!taskDb) {\n      throw new Error('Database not initialized');\n    }\n    \n    // 验证任务数据\n    if (!task || !task.id || !task.title || !task.status) {\n      throw new Error('Invalid task data');\n    }\n    \n    console.log('Adding task in main process:', task);\n    const result = await taskDb.addTask(task);\n    console.log('Task added in main process, result:', result);\n    \n    // 通知渲染进程任务已添加\n    if (mainWindow) {\n      mainWindow.webContents.send('task-added', { success: true, data: result });\n    }\n    \n    return { success: true, data: result };\n  } catch (err) {\n    console.error('Error in add-task:', err);\n    const errorMessage = err instanceof Error ? err.message : 'Unknown error';\n    dialog.showErrorBox('添加任务失败', errorMessage);\n    return { success: false, error: errorMessage };\n  }\n});\n\nipcMain.handle('update-task-status', async (_, { taskId, status, updateTime }) => {\n  try {\n    return await taskDb.updateTaskStatus(taskId, status, updateTime);\n  } catch (err) {\n    console.error('Error in update-task-status:', err);\n    throw err;\n  }\n});\n\nipcMain.handle('delete-task', async (_, taskId) => {\n  try {\n    return await taskDb.deleteTask(taskId);\n  } catch (err) {\n    console.error('Error in delete-task:', err);\n    throw err;\n  }\n});\n\nipcMain.handle('update-task', async (_, task) => {\n  try {\n    if (!taskDb) {\n      throw new Error('Database not initialized');\n    }\n    \n    // 验证任务数据\n    if (!task || !task.id || !task.title || !task.status) {\n      throw new Error('Invalid task data');\n    }\n    \n    console.log('Updating task in main process:', task);\n    const result = await taskDb.updateTask(task);\n    console.log('Task updated in main process, result:', result);\n    \n    return { success: true, data: result };\n  } catch (err) {\n    console.error('Error in update-task:', err);\n    const errorMessage = err instanceof Error ? err.message : 'Unknown error';\n    dialog.showErrorBox('更新任务失败', errorMessage);\n    return { success: false, error: errorMessage };\n  }\n});\n\nlet mainWindow: BrowserWindow | null = null;\n\nasync function createWindow() {\n  try {\n    await initDatabase();\n\n    mainWindow = new BrowserWindow({\n      width: 1200,\n      height: 800,\n      webPreferences: {\n        nodeIntegration: false,\n        contextIsolation: true,\n        preload: join(__dirname, 'preload.js')\n      },\n      icon: join(__dirname, '../Resources/icon.png')\n    });\n\n    if (process.env.VITE_DEV_SERVER_URL) {\n      await mainWindow.loadURL(process.env.VITE_DEV_SERVER_URL);\n    } else {\n      mainWindow.loadFile(join(__dirname, '../dist/index.html'));\n    }\n\n    mainWindow.on('closed', () => {\n      mainWindow = null;\n    });\n\n    // 创建菜单\n    const template = [\n      {\n        label: '开发',\n        submenu: [\n          {\n            label: '开发者工具',\n            accelerator: process.platform === 'darwin' ? 'Cmd+Option+I' : 'Ctrl+Shift+I',\n            click: () => {\n              mainWindow?.webContents.toggleDevTools();\n            }\n          }\n        ]\n      }\n    ];\n\n    // 仅在开发环境显示开发菜单\n    if (process.env.VITE_DEV_SERVER_URL) {\n      const menu = Menu.buildFromTemplate(template);\n      Menu.setApplicationMenu(menu);\n    } else {\n      // 生产环境可以隐藏菜单\n      Menu.setApplicationMenu(null);\n    }\n  } catch (error) {\n    console.error('Error creating window:', error);\n    dialog.showErrorBox('启动错误', error.message);\n  }\n}\n\napp.whenReady().then(createWindow).catch(err => {\n  console.error('Failed to start app:', err);\n  dialog.showErrorBox('启动失败', err.message);\n});\n\napp.on('window-all-closed', () => {\n  if (process.platform !== 'darwin') {\n    app.quit();\n  }\n});\n\napp.on('activate', () => {\n  if (mainWindow === null) {\n    createWindow();\n  }\n});\n\n// 添加错误处理\nprocess.on('uncaughtException', (error) => {\n  console.error('Uncaught exception:', error);\n  dialog.showErrorBox('未处理的错误', error.message);\n});\n\nprocess.on('unhandledRejection', (reason) => {\n  console.error('Unhandled rejection:', reason);\n  dialog.showErrorBox('未处理的 Promise 错误', reason.toString());\n}); "],"names":["__dirname","fileURLToPath","dialog","ipcMain","BrowserWindow","join","Menu","app"],"mappings":"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"}